// Generated by CoffeeScript 1.6.3
(function() {
  var Router, count, currentTab, decodeMagnet, escapeHtml, escapeMagnet, renderGoals, switchTab;

  currentTab = "search-tab";

  count = 0;

  switchTab = function(tab) {
    return $("#" + currentTab).fadeOut(function() {
      $("#" + tab).removeClass("hidden").fadeIn();
      return currentTab = tab;
    });
  };

  escapeHtml = function(str) {
    var div;
    div = document.createElement("div");
    div.appendChild(document.createTextNode(str));
    return div.innerHTML;
  };

  escapeMagnet = function(str) {
    return escapeHtml(str).replace(/&amp;/g, "&");
  };

  decodeMagnet = function(uri) {
    var data, params, result;
    result = {};
    data = uri.split("magnet:?")[1];
    if (!data || data.length === 0) {
      throw new Error("Invalid magnet URI");
    }
    params = data.split("&");
    params.forEach(function(param) {
      var key, keyval, old, val;
      keyval = param.split("=");
      key = keyval[0];
      val = keyval[1];
      if (keyval.length !== 2) {
        throw new Error("Invalid magnet URI");
      }
      if (key === "tr") {
        val = decodeURIComponent(val);
      }
      if (result[key]) {
        if (Array.isArray(result[key])) {
          return result[key].push(val);
        } else {
          old = result[key];
          return result[key] = [old, val];
        }
      } else {
        return result[key] = val;
      }
    });
    return result;
  };

  Router = Backbone.Router.extend({
    routes: {
      "search": "search",
      "search/*query": "search",
      "publish": "publish",
      "faq": "faq",
      "about": "about",
      "future": "future",
      "*default": "search"
    },
    search: function(query) {
      console.log(query);
      if (currentTab !== "search-tab") {
        switchTab("search-tab");
      }
      if (query == null) {
        if ($("#searchResultsBody").is(":visible")) {
          return $("#searchResultsBody").fadeOut(function() {
            return $("#searchBody").fadeIn();
          });
        }
      } else {
        $("#searchQuery").val(query);
        $("#innerSearchQuery").val(query);
        count = 0;
        $("#searchResults").empty();
        socket.get("/feathercoin/search?query=" + query);
        return $("#searchBody").fadeOut(function() {
          return $("#searchResultsBody").removeClass("hidden").fadeIn();
        });
      }
    },
    publish: function() {
      return switchTab("publish-tab");
    },
    faq: function() {
      return switchTab("faq-tab");
    },
    about: function() {
      return switchTab("about-tab");
    },
    future: function() {
      return switchTab("future-tab");
    }
  });

  renderGoals = function(goals) {
    var html;
    html = window.JST["assets/linker/templates/goalItem.html"]({
      goals: goals
    });
    return $("#goalBody").empty().append(html);
  };

  $(document).ready(function() {
    var populateTimeout, prepopulate, router, runPrepopulate;
    count = 0;
    router = new Router();
    Backbone.history.start();
    socket.on("connect", function() {
      socket.on("searchResult", function(result) {
        var html;
        result.count = count++;
        html = window.JST["assets/linker/templates/searchResult.html"](result);
        return $("#searchResults").append(html);
      });
      socket.on("goals", function(goals) {
        return renderGoals(goals);
      });
      return socket.get("/feathercoin/goals", function(goals) {
        return renderGoals(goals);
      });
    });
    $("#publishButton").click(function(event) {
      var formData, key, sendMe, value;
      event.preventDefault();
      formData = $("#publishForm").serializeArray();
      console.log(JSON.stringify(formData));
      sendMe = {};
      for (key in formData) {
        value = formData[key];
        if (value.value) {
          sendMe[value.name] = value.value;
        }
      }
      return socket.put("/feathercoin/publish", sendMe, function(message) {
        var html;
        html = window.JST["assets/linker/templates/publishResults.html"](message);
        $(html).dialog({
          width: 500,
          title: "Ready To Publish",
          show: "fadeIn",
          modal: true,
          closeText: "Ok",
          buttons: [
            {
              text: "Ok",
              click: function() {
                return $(this).dialog("close");
              }
            }
          ]
        });
        return socket.on(message.sendAddress, function(result) {
          html = window.JST["assets/linker/templates/publishSuccess.html"](result);
          return $(html).dialog({
            width: 850,
            title: "Successfully Published",
            show: "fadeIn",
            modal: true,
            closeText: "Ok",
            buttons: [
              {
                text: "Ok",
                click: function() {
                  return $(this).dialog("close");
                }
              }
            ]
          });
        });
      });
    });
    populateTimeout = -1;
    runPrepopulate = function() {
      if (populateTimeout !== -1) {
        clearTimeout(populateTimeout);
      }
      return populateTimeout = setTimeout(prepopulate, 1000);
    };
    prepopulate = function() {
      var e, name, payload, r, xt;
      populateTimeout = -1;
      try {
        r = decodeMagnet($("#payloadInline").val());
        name = decodeURI(r["dn"]).replace(/\+/g, ' ');
        if (name.indexOf(" ") === -1) {
          name = name.replace(/\./g, " ");
        }
        $("#name").val(name);
        xt = r["xt"];
        if (Array.isArray(xt)) {
          xt = xt.join("&xt=");
        }
        payload = "magnet:?xt=" + xt + "&dn=" + r["dn"];
        if (payload !== $("#payloadInline").val()) {
          $("#payloadInline").val(payload);
        }
        return socket.get("/feathercoin/keywords?query=" + name, function(keywords) {
          return $("#keywords").val(keywords.join(", "));
        });
      } catch (_error) {
        e = _error;
        return console.log(e);
      }
    };
    $("#payloadInline").on("keyup blur", runPrepopulate);
    $("#searchForm").submit(function(event) {
      window.location = "#search/" + $("#searchQuery").val();
      event.preventDefault();
      return false;
    });
    $("#searchButton").click(function(event) {
      count = 0;
      window.location = "#search/" + $("#searchQuery").val();
      event.preventDefault();
      return false;
    });
    return $("#innerSearchButton").click(function(event) {
      count = 0;
      window.location = "#search/" + $("#innerSearchQuery").val();
      event.preventDefault();
      return false;
    });
  });

}).call(this);
